<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Savings Account Type</title>
    <link rel="stylesheet" href="/css/analysis-find-account.css">
</head>

<body>
    <div class="header">
        <h1>Analysis</h1>
        <div class="row">
            <h2>Find Account</h2>
            <button type="button" class="btn-CSV" id="csv_button">Export CSV</button>
        </div>
    </div>
    <div>
        <a id="contact-link">
            <button class="button" id="contact-button">Contact</button>
        </a>
    </div>
    <div class="input-container">
        <div class="input-ID">
            <label for="ID_account">ID Account</label>
            <input type="text" class="input-field" id="ID_account" placeholder="MSxxxx">
        </div>
        <div class="input-group">
            <label for="ID_card">ID Card</label>
            <input type="text" class="input-field" id="ID_card" placeholder="012345678911">
        </div>
    </div>
    <div class="input-container-second">
        <div class="input_date_create">
            <label for="date-create">Date Create Account</label>
            <input type="text" class="input-field" id="date-create" placeholder="dd/mm/yyyy" maxlength="10">
        </div>
        <div class="type_of_saving">
            <label for="type-saving">Type of Saving</label>
            <select id="type-saving">
                <option value="">Choose type</option>
                <option value="3-months">3 months</option>
                <option value="6-months">6 months</option>
                <option value="non-term">Non-term</option>
                <option value="1-year">1 year</option>
            </select>
        </div>
    </div>
    <button type="button" class="btn-primary" id="submit_button">Find</button>

    <div class="table-container">
        <table class="account-table" id="account-table">
            <caption>List of Accounts</caption>
            <thead>
                <tr>
                    <th>No</th>
                    <th>ID Account</th>
                    <th>Type of Saving</th>
                    <th>Customer's name</th>
                    <th>Balance (VND)</th>
                </tr>
            </thead>
            <tbody>
                <!-- Initial 10 rows of dummy data -->
                <script>
                    const initialData = [
                        { id_account: "MS001", type_of_saving: "3 months", name: "John Doe", balance: "10,000,000" },
                        { id_account: "MS002", type_of_saving: "6 months", name: "Jane Smith", balance: "15,000,000" },
                        { id_account: "MS003", type_of_saving: "Non-term", name: "Sam Green", balance: "20,000,000" },
                        { id_account: "MS004", type_of_saving: "1 year", name: "Lisa Black", balance: "25,000,000" },
                        { id_account: "MS005", type_of_saving: "3 months", name: "Tom Brown", balance: "30,000,000" },
                        { id_account: "MS006", type_of_saving: "6 months", name: "Eva White", balance: "35,000,000" },
                        { id_account: "MS007", type_of_saving: "Non-term", name: "Paul Blue", balance: "40,000,000" },
                        { id_account: "MS008", type_of_saving: "1 year", name: "Cathy Yellow", balance: "45,000,000" },
                        { id_account: "MS009", type_of_saving: "3 months", name: "Chris Red", balance: "50,000,000" },
                        { id_account: "MS010", type_of_saving: "6 months", name: "Nina Grey", balance: "55,000,000" }
                    ];

                    window.addEventListener('DOMContentLoaded', function () {
                        renderTable(initialData);
                    });
                </script>
            </tbody>
        </table>
    </div>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
        const selectElement = document.getElementById('type-saving');

        // Fetch options from API
        fetch('/analysis/find-account/createReportAPI') // Replace with your API endpoint
            .then(response => response.json())
            .then(data => {
                // Assuming `data` is an array of objects with `value` and `text` properties
                // Example data: [{ value: '3-months', text: '3 months' }, ...]
                data.forEach(option => {
                    const optionElement = document.createElement('option');
                    optionElement.value = option.value;
                    optionElement.textContent = option.text;
                    selectElement.appendChild(optionElement);
                });
            })
            .catch(error => {
                console.error('Error fetching options:', error);
            });
    });
        function renderTable(data) {
            const tbody = document.querySelector("#account-table tbody");
            tbody.innerHTML = ""; // Clear existing rows

            data.forEach((item, index) => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${item.acc_id}</td>
                    <td>${item.type}</td>
                    <td>${item.name}</td>
                    <td>${item.balance}</td>
                `;
                tbody.appendChild(row);
            });

            // Add scroll bar if more than 10 rows
            const tableContainer = document.querySelector(".table-container");
            if (data.length > 10) {
                tableContainer.style.overflowY = "scroll";
            } else {
                tableContainer.style.overflowY = "auto"; // Disable scroll if not needed
            }
        }

        document.getElementById("submit_button").addEventListener("click", function () {
            var idAccount = document.getElementById("ID_account").value || null;
            var idCard = document.getElementById("ID_card").value || null;
            var dateCreate = document.getElementById("date-create").value || null;
            var typeSaving = document.getElementById("type-saving").value || null;

            // Fetch data from API
            fetch(`/analysis/find-account/createReportAPI?id_card=${idAccount}&id_account=${idCard}&date_created_account=${dateCreate}&type_of_saving=${typeSaving}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Response JSON data:', JSON.stringify(data, null, 2)); // Pretty print JSON data
                    if (Array.isArray(data)) {
                        renderTable(data);
                    } else {
                        console.error('Expected an array but received:', data);
                        alert('Unexpected data format received from the server.');
                    }
                })
                .catch(error => console.error('Error fetching data:', error));
        });

        document.getElementById("csv_button").addEventListener("click", function () {
            const table = document.getElementById("account-table");
            const rows = Array.from(table.querySelectorAll("tr"));
            const csv = rows.map(row => Array.from(row.querySelectorAll("th, td"))
                .map(cell => `"${cell.innerText}"`).join(",")).join("\n");

            const csvBlob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const csvUrl = URL.createObjectURL(csvBlob);
            const link = document.createElement("a");
            link.href = csvUrl;
            link.download = "accounts_report.csv";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
    </script>
</body>

</html>