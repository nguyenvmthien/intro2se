<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="/css/home.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <div class="welcome-box">
        <div class="welcome-text">
            <img src="/images/home/sunshine1.png" alt="Decorative Image" class="decorative-image">
            Welcome to MATA. <br>
            How can we help you today? <br>
        </div>
    </div>

    <div class="welcome-box1">
        <div class="welcome-text1">
            Total account opened. <br>
        </div>
        <div id="opened-accounts" class="amount1"></div>
    </div>

    <div class="welcome-box2">
        <div class="welcome-text2">
            Total account closed <br>
        </div>
        <div id="closed-accounts" class="amount2"></div>
    </div>

    <!-- New welcome box -->
    <div class="welcome-box3">
        <img src="/images/home/girl.png" alt="Girl Image" class="girl-image">
        <img src="/images/home/money-image.png" alt="Money Image" class="money-image">
        <div class="welcome-text3">
            <h1> Every penny you save now is a step closer to living your best life. </h1>
            <h2> Let's make that saving account pop! </h2>
        </div>
    </div>
    <div class="chart-container">
        <canvas id="myChart"></canvas>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Fetch dữ liệu từ API
            fetch('/home/getChartData')
                .then(response => response.json())
                .then(data => {
                    // Cập nhật dữ liệu cho biểu đồ với dữ liệu fetch từ server
                    config.data.datasets[0].data = [data.deposited, data.withdrawn];
                    chart.update(); // Cập nhật biểu đồ với dữ liệu mới
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });

            fetch('/home/getTotalOpenedAccountsAPI')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('opened-accounts').innerText = data; 
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
            
            fetch('/home/getTotalClosedAccountsAPI')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('closed-accounts').innerText = data;
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        });

        const config = {
            type: 'doughnut',
            data: {
                labels: ['Deposited', 'Withdrawn'],
                datasets: [{
                    data: [0, 0], // Dữ liệu sẽ được cập nhật từ fetch API
                    backgroundColor: ['#BAB5F6', '#FF5F9E'] // Màu sắc cho các phần của biểu đồ
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom', // Vị trí chú thích dưới cùng
                        labels: {
                            boxWidth: 20, // Chiều rộng của hộp màu
                            padding: 20, // Khoảng cách xung quanh các mục chú thích
                        }
                    },
                    title: {
                        display: true,
                        text: 'Transaction activities',
                        position: 'top', // Vị trí tiêu đề ở trên cùng
                        font: {
                            size: 30, // Kích thước phông chữ của tiêu đề
                            weight: 'bold', // Độ đậm của tiêu đề
                            family: 'Inika' // Phông chữ
                        },
                        padding: {
                            top: 10,
                            bottom: 10
                        }
                    }
                },
                layout: {
                    padding: 20 // Khoảng cách xung quanh biểu đồ
                },
                cutout: '70%', // Điều chỉnh độ dày của vòng tròn
            }
        };

        // Tạo biểu đồ
        var ctx = document.getElementById('myChart').getContext('2d');
        var chart = new Chart(ctx, config);

    </script>
</body>

</html>