<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Savings Account Type</title>
    <link rel="stylesheet" href="/css/change-type-create.css">
</head>

<body>
    <div class="header">
        <div>
            <h2>Create</h2>
        </div>
        <div>
            <h1>Types of Savings</h1>
        </div>
    </div>
    <div>
        <a id="contact-link">
            <button class="button" id="contact-button">Contact</button>
        </a>
    </div>
    <form id="myForm">
        <div class="container">
            <div class="type-group">
                <div class="label-group">
                    <label for="savingsType">Type</label>
                    <select class="form-control" id="savingsType">
                        <option value="" disabled selected>Term/Non-term</option>
                        <option value="non-term">Non-term</option>
                        <option value="term">Term</option>
                    </select>
                </div>
                <div class="label-group-1">
                    <div class="term-group" id="termInputs" style="display: none;">
                        <label for="term-months">If term:</label>
                        <div class="input-group-1">
                            <input type="text" class="term" id="term-months" placeholder="3">
                            <input type="text" class="term-months" id="months" placeholder="month(s)" disabled>
                        </div>
                    </div>
                    <p id="termNotification" style="display: none; color: red;">It must be an integer</p>
                </div>
            </div>
        </div>

        <div class="input-container">
            <div class="input-group">
                <label for="interest-rate">Interest rate (%)</label>
                <img src="/images/valid-icon/valid.png" id="valid_interest_rate" class="valid">
                <img src="/images/valid-icon/invalid.png" id="invalid_interest_rate" class="invalid">
                <input type="text" name="interest_rate" class="input-field" id="interest-rate" placeholder="0.15">
                <p id="interestRateNotification" style="display: none; color: red;">It must be a number</p>
            </div>
            <div class="input-group">
                <label for="min-deposit">Minimum deposit amount (VND)</label>
                <img src="/images/valid-icon/valid.png" id="valid_min_deposit" class="valid">
                <img src="/images/valid-icon/invalid.png" id="invalid_min_deposit" class="invalid">
                <input type="text" name="min_dep_money" class="input-field" id="min-deposit" placeholder="100,000">
                <p id="minDepositNotification" style="display: none; color: red;">It must be a number</p>
            </div>
            <div class="input-group">
                <label for="min-days">Minimum days to withdraw (days)</label>
                <img src="/images/valid-icon/valid.png" id="valid_min_days" class="valid">
                <img src="/images/valid-icon/invalid.png" id="invalid_min_days" class="invalid">
                <input type="text" name="min_days_withdraw" class="input-field" id="min-days" placeholder="30">
                <p id="minDaysNotification" style="display: none; color: red;">It must be a number</p>
            </div>
        </div>
        <div class="container">
            <div class="time-container">
                <div class="time-info">
                    <label for="hourSelect" class="time-label">Applied time</label>
                    <div class="time-selectors">
                        <select class="date-control" id="hourSelect">
                            <option value="" disabled selected>hour</option>
                            <!-- Các tùy chọn giờ -->
                            <option value="0">0</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                            <option value="21">21</option>
                            <option value="22">22</option>
                            <option value="23">23</option>
                            <!-- More options -->
                            <option value="23">23</option>
                        </select>
                        <select class="date-control" id="minSelect">
                            <option value="" disabled selected>Min</option>
                            <!-- Options for minutes -->
                            <!-- Các tùy chọn phút -->
                            <option value="0">0</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                            <option value="15">15</option>
                            <option value="16">16</option>
                            <option value="17">17</option>
                            <option value="18">18</option>
                            <option value="19">19</option>
                            <option value="20">20</option>
                            <option value="21">21</option>
                            <option value="22">22</option>
                            <option value="23">23</option>
                            <option value="24">24</option>
                            <option value="25">25</option>
                            <option value="26">26</option>
                            <option value="27">27</option>
                            <option value="28">28</option>
                            <option value="29">29</option>
                            <option value="30">30</option>
                            <option value="31">31</option>
                            <option value="32">32</option>
                            <option value="33">33</option>
                            <option value="34">34</option>
                            <option value="35">35</option>
                            <option value="36">36</option>
                            <option value="37">37</option>
                            <option value="38">38</option>
                            <option value="39">39</option>
                            <option value="40">40</option>
                            <option value="41">41</option>
                            <option value="42">42</option>
                            <option value="43">43</option>
                            <option value="44">44</option>
                            <option value="45">45</option>
                            <option value="46">46</option>
                            <option value="47">47</option>
                            <option value="48">48</option>
                            <option value="49">49</option>
                            <option value="50">50</option>
                            <option value="51">51</option>
                            <option value="52">52</option>
                            <option value="53">53</option>
                            <option value="54">54</option>
                            <option value="55">55</option>
                            <option value="56">56</option>
                            <option value="57">57</option>
                            <option value="58">58</option>
                            <option value="59">59</option>
                        </select>
                    </div>
                </div>
                <div class="day">
                    <label for="app-date">Applied date</label>
                    <input type="date" name="applied_date" class="date-control" id="app-date">
                </div>
            </div>
        </div>
        <button type="submit" class="btn-primary" id="submit_button">Create</button>
    </form>
    <div class="pop-up" id="pop-up">
        <div class="pop-up-content" id="popup-content"></div>
    </div>
    <div id="noti-pop-up" class="noti-pop-up">
        <div class="noti-pop-up-content">
            <div>
                <h2 id="success-message">Created Successfully!</h2>
            </div>
            <div>
                <h2 id="fail-message">Failed to Create new account!</h2>
                <br>
                <h2 id="fail-message2">Something went wrong.</h2>
            </div>
            <div>
                <img id="success-icon" src="/images/popup/success.png">
                <img id="fail-icon" src="/images/popup/fail.png">
            </div>
            <button id="pop-up-button" class="button" onclick="closeNotiPopup()">Close</button>
        </div>
    </div>
</body>
<script>
    function closeNotiPopup() {
        var notificationPopup = document.getElementById("noti-pop-up");
        notificationPopup.style.display = "none";
    }
    // Function to format the number with commas
    function formatNumber(value) {
        // Remove any existing commas
        value = value.replace(/,/g, '');
        // Split into integer and decimal parts
        const parts = value.split('.');
        // Format the integer part with commas
        const integerPart = parts[0];
        const formattedIntegerPart = integerPart.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        // Combine integer and decimal parts if any
        return parts.length > 1 ? `${formattedIntegerPart}.${parts[1]}` : formattedIntegerPart;
    }

    // Set up the contact link
    const currentDomain = window.location.origin;
    const contactPath = "/contact";
    const fullContactUrl = `${currentDomain}${contactPath}`;
    document.getElementById("contact-link").href = fullContactUrl;
    //fetch API to check if Non-term exists
    fetch('/change-type/create/getcurTypeAPI')
        .then(response => response.json())
        .then(data => {
            const selectElement = document.getElementById('savingsType');
            let nonTermExistsInData = false;

            // Check if 'non-term' exists in the fetched data
            data.forEach(option => {
                if (option.type.toLowerCase() === 'non-term') {
                    nonTermExistsInData = true;
                }
            });

            // If 'non-term' exists in the data, remove it from the <select> element
            if (nonTermExistsInData) {
                Array.from(selectElement.options).forEach(option => {
                    if (option.value.toLowerCase() === 'non-term') {
                        selectElement.remove(option.index);
                    }
                });
            }
            // Otherwise, leave the 'non-term' option as it is (default)
        })
        .catch(error => console.error('Error fetching data:', error));


    document.addEventListener("DOMContentLoaded", function () {
        const termInputs = document.getElementById("termInputs");
        const termMonths = document.getElementById("term-months");
        const termNotification = document.getElementById("termNotification");
        const interestRateNotification = document.getElementById("interestRateNotification");
        const minDepositNotification = document.getElementById("minDepositNotification");
        const minDaysNotification = document.getElementById("minDaysNotification");

        // Helper function to show valid or invalid icons and messages
        function validateInput(input, notification, isValid) {
            const validIcon = input.parentElement.querySelector(".valid");
            const invalidIcon = input.parentElement.querySelector(".invalid");

            if (isValid) {
                notification.style.display = "none";
                validIcon.style.display = "flex";
                invalidIcon.style.display = "none";
            } else {
                notification.style.display = "flex";
                validIcon.style.display = "none";
                invalidIcon.style.display = "flex";
            }
        }
        // Show or hide term inputs based on savings type
        document.getElementById("savingsType").addEventListener("change", function () {
            const savingsType = document.getElementById("savingsType").value;
            termInputs.style.display = savingsType === "term" ? "block" : "none";
        });
        // Real-time validation for each input field
        document.getElementById("interest-rate").addEventListener("input", function () {
            const interestRate = this.value;
            const isValid = !isNaN(interestRate) && interestRate !== '';
            validateInput(this, interestRateNotification, isValid);
        });
        document.getElementById("min-deposit").addEventListener("input", function () {
            let minDeposit = this.value;
            // Format the number
            minDeposit = formatNumber(minDeposit);
            // Update the input field's value
            this.value = minDeposit;
            // Validate the formatted value
            const isValid = !isNaN(minDeposit.replace(/,/g, '')) && minDeposit !== '';
            validateInput(this, minDepositNotification, isValid);
        });

        document.getElementById("min-days").addEventListener("input", function () {
            const minDays = this.value;
            const isValid = !isNaN(minDays) && Number.isInteger(Number(minDays)) && minDays !== '';
            validateInput(this, minDaysNotification, isValid);
        });

        document.getElementById("term-months").addEventListener("input", function () {
            const termMonths = this.value;
            const isValid = !isNaN(termMonths) && Number.isInteger(Number(termMonths)) && termMonths !== '';
            validateInput(this, termNotification, isValid);
        });

        document.getElementById("submit_button").addEventListener("click", function (event) {
            event.preventDefault(); // Prevent form from submitting
            const savingsType = document.getElementById("savingsType").value;
            const interestRate = document.getElementById("interest-rate").value;
            const minDeposit = document.getElementById("min-deposit").value;
            const minDays = document.getElementById("min-days").value;
            const hour = document.getElementById("hourSelect").value;
            const minute = document.getElementById("minSelect").value;
            const date = document.getElementById("app-date").value;

            let isValid = true;
            if (isNaN(interestRate) || interestRate === '') {
                isValid = false;
            }
            if (isNaN(minDeposit) || minDeposit === '') {
                isValid = false;
            }
            if (isNaN(minDays) || !Number.isInteger(Number(minDays)) || minDays === '') {
                isValid = false;
            }
            if (savingsType === "term") {
                const termMonthsValue = document.getElementById("term-months").value;
                if (isNaN(termMonthsValue) || !Number.isInteger(Number(termMonthsValue)) || termMonthsValue === '') {
                    isValid = false;
                }
            }
            if (!isValid || savingsType === "" || interestRate === "" || minDeposit === "" || minDays === "" || hour === "" || minute === "" || date === "") {
                return;
            }
            const popup = document.getElementById("pop-up");
            const popupContent = document.getElementById("popup-content");
            // Convert hour and minute to SQL time format
            const appliedTime = `${hour.padStart(2, '0')}:${minute.padStart(2, '0')}`;
            // Determine savings type display
            let savingsTypeDisplay;
            if (savingsType === "term") {
                savingsTypeDisplay = termMonths.value === "1" ? `${termMonths.value} month` : `${termMonths.value} months`;
            } else {
                savingsTypeDisplay = "Non-term";
            }
            // Pop-up content
            popupContent.innerHTML = `
            <div>
                <h2>Preview Information</h2>
                <img src="/images/popup/doublecheck.png" alt="Image Preview">
                <legend>Saving's Information</legend>
                <p>Type of savings: ${savingsTypeDisplay}</p>
                <p>Interest rate: ${interestRate}%</p>
                <p>Minimum deposit amount: ${minDeposit} VNĐ</p>
                <p>Minimum days to withdraw: ${minDays} days</p>
                <legend>Applicable Time</legend>
                <p>Applied time: ${appliedTime}</p>
                <p>Applied date: ${date}</p>
                <div class="buttons">
                    <button class="submit-btn" id="confirm-edit">Submit</button>
                    <button class="cancel-btn" id="cancel-edit">Cancel</button>
                </div>
            </div>`;
            popup.style.display = "flex";
            //Confirm or Cancel
            const confirmEdit = document.getElementById("confirm-edit");
            const cancelEdit = document.getElementById("cancel-edit");
            confirmEdit.addEventListener("click", function () {
                const form = document.getElementById("myForm");
                popup.style.display = "none";
                // Set the savings type appropriately based on selection
                if (savingsType === "term") {
                    const termInput = document.createElement('input');
                    termInput.type = 'hidden';
                    termInput.name = 'type';
                    termInput.value = savingsTypeDisplay;
                    form.appendChild(termInput);
                } else {
                    const nonTermInput = document.createElement('input');
                    nonTermInput.type = 'hidden';
                    nonTermInput.name = 'type';
                    nonTermInput.value = 'non-term';
                    form.appendChild(nonTermInput);
                }
                // Create a hidden input to store the combined time value
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'applied_time';
                hiddenInput.value = appliedTime;
                // Append the hidden input to the form
                form.appendChild(hiddenInput);
                var data = new FormData(form);
                const formObject = {};
                data.forEach((value, key) => {
                    formObject[key] = value;
                });
                fetch('/change-type/create', {
                    method: 'POST',
                    body: JSON.stringify(formObject),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(response => response.json())
                    .then(data => {
                        var noti_popup = document.getElementById("noti-pop-up");
                        noti_popup.style.display = "block";
                        if (data.message == "success") {
                            document.getElementById('success-icon').style.display = "inline";
                            document.getElementById('fail-icon').style.display = "none";
                            document.getElementById('success-message').style.display = "inline";
                            document.getElementById('fail-message').style.display = "none";
                            document.getElementById('fail-message2').style.display = "none";

                        } else if (data.message == "fail") {
                            document.getElementById('success-icon').style.display = "none";
                            document.getElementById('fail-icon').style.display = "inline";
                            document.getElementById('success-message').style.display = "none";
                            document.getElementById('fail-message').style.display = "inline";
                            document.getElementById('fail-message2').style.display = "inline";

                        } else {
                            document.getElementById('success-icon').style.display = "none";
                            document.getElementById('fail-icon').style.display = "none";
                            document.getElementById('success-message').style.display = "none";
                            document.getElementById('fail-message').style.display = "none";
                            document.getElementById('fail-message2').style.display = "none";

                        }
                    })
            });
            cancelEdit.addEventListener("click", function () {
                popup.style.display = "none";
            });
        });
    });
</script>
</html>